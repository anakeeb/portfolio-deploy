{"version":3,"sources":["img/portfolio.png","img/ffLogo.png","img/ticTacRobotlogo.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","state","hovered","handleHoverOut","bind","handleHoverIn","id","console","log","newHovered","this","setState","prevState","Styles","styled","div","Portfolio","ff","className","src","FinancialLogo","ffText","ttr","TtrLogo","ttrText","Container","Row","Col","href","onMouseEnter","onMouseLeave","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"8EAAAA,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,6C,u6DC0V5BC,E,kDA5Ub,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,QAAS,EAAC,GAAO,IAGnB,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBAPT,E,2DAUCE,GACbC,QAAQC,IAAI,MAAOF,GACnB,IAAIG,EAAaC,KAAKT,MAAMC,QAC5BO,EAAWH,IAAM,EACjBI,KAAKC,UAAS,SAAAC,GACZ,MAAO,CACLV,QAASO,Q,oCAKDH,GACZC,QAAQC,IAAI,KAAMF,GAClB,IAAIG,EAAaC,KAAKT,MAAMC,QAC5BO,EAAWH,IAAM,EACjBI,KAAKC,UAAS,SAAAC,GACZ,MAAO,CACLV,QAASO,Q,+BAKL,IAAD,OACDI,EAASC,IAAOC,IAAV,IAEaC,KA0ErBC,EACF,yBAAKC,UAAU,UAAUC,IAAMC,MAE7BC,EACF,6BACE,wBAAIH,UAAU,eAAd,6MAIAI,EACA,yBAAKJ,UAAU,UAAUC,IAAMI,MAE/BC,EACF,6BACE,wBAAIN,UAAU,eAAd,mOA0BJ,OACE,kBAACL,EAAD,KACE,yBAAKK,UAAU,cACbkBAACO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,MAEA,kBAACA,EAAA,EAAD,KACE,uBAAGC,KAAK,uDACN,4BAAQV,UAAU,QAAQW,aAAc,kBAAM,EAAKxB,cAAc,IAAIyB,aAAc,kBAAM,EAAK3B,eAAe,KACzGO,KAAKT,MAAMC,QAAQ,GAAKmB,EAASJ,KAMzC,kBAACU,EAAA,EAAD,MAEA,kBAACA,EAAA,EAAD,KACE,uBAAGC,KAAK,kDACN,4BAAQV,UAAU,QAAQW,aAAc,kBAAM,EAAKxB,cAAc,IAAIyB,aAAc,kBAAM,EAAK3B,eAAe,KACzGO,KAAKT,MAAMC,QAAQ,GAAKsB,EAAUF,KAK1C,kBAACK,EAAA,EAAD,c,GAhUII,IAAMC,WCDJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL3C,QAAQ2C,MAAMA,EAAMC,c","file":"static/js/main.efbe4de8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/portfolio.646def75.png\";","module.exports = __webpack_public_path__ + \"static/media/ffLogo.81f4c9e3.png\";","module.exports = __webpack_public_path__ + \"static/media/ticTacRobotlogo.a7bbcaa9.png\";","import React from 'react';\nimport Portfolio from './img/portfolio.png'\nimport FinancialLogo from './img/ffLogo.png'\nimport TtrLogo from './img/ticTacRobotlogo.png'\nimport styled from 'styled-components'\nimport CardDeck from 'react-bootstrap/CardDeck'\nimport CardGroup from 'react-bootstrap/CardGroup'\nimport Card from 'react-bootstrap/Card'\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      hovered: [false, false]\n    }\n\n    this.handleHoverOut = this.handleHoverOut.bind(this)\n    this.handleHoverIn = this.handleHoverIn.bind(this)\n  }\n\n  handleHoverOut(id) {\n    console.log('out', id)\n    let newHovered = this.state.hovered\n    newHovered[id] = false\n    this.setState(prevState => {\n      return {\n        hovered: newHovered\n      }\n    })\n  }\n\n  handleHoverIn(id) {\n    console.log('in', id)\n    let newHovered = this.state.hovered\n    newHovered[id] = true\n    this.setState(prevState => {\n      return {\n        hovered: newHovered\n      }\n    })\n  }\n\n  render() {\n    const Styles = styled.div`\n      .background {\n          background: url(${ Portfolio }) no-repeat center fixed;\n          background-position: center;\n          background-size: cover;\n          background-attachment: scroll;\n          height: 3100px;\n          padding: 140px 100px;\n          color: #ffffff\n      }\n\n      .card {\n        color: #000\n      }\n\n      .link1 {\n        background: #ffffff;\n        border: 40px solid #cccccc;\n        border-radius: 12px;\n        float: left;\n        line-height: 450px;\n        height: 450px;\n        margin-right: -1px;\n        margin-top: -1px;\n        padding: 0;\n        width: 500px;\n        justifyContent:'center';\n\n        &:hover {\n          border: 40px solid #888888;\n        }\n      }\n\n      .link2 {\n        background: #ffffff;\n        border: 40px solid #cccccc;\n        border-radius: 12px;\n        float: right;\n        line-height: 450px;\n        height: 450px;\n        margin-right: -1px;\n        margin-top: -1px;\n        padding: 0;\n        width: 500px;\n        justifyContent:'center';\n\n\n        &:hover {\n          border: 40px solid #888888;\n        }\n      }\n\n      .imgLong {\n        height: auto;\n        max-width: 400px;\n        display: block;\n        margin-left: auto;\n        margin-right: auto;\n      }\n\n      .imgTall {\n        width: auto;\n        max-height: 300px;\n        display: block;\n        margin-left: auto;\n        margin-right: auto;\n      }\n\n      .description {\n        font-size: 20px;\n        line-height: 20px;\n        color: #ff9f1c;\n      }\n\n    `\n\n    let ff = (\n      <img className='imgTall' src={ FinancialLogo }/>\n    )\n    let ffText = (\n      <div>\n        <h1 className='description'>Financial Forecast is a marriage between finance and deep learning.  Using a convolutional neural network and customizable stock data, the application will predict the stock price a day in the future.</h1>\n      </div>\n      \n    )\n    let ttr = (\n        <img className='imgLong' src={ TtrLogo }/>\n    )\n    let ttrText = (\n      <div>\n        <h1 className='description'>Tic-Tac-Robot is a game that the user cannot win.  While it does not sound too fun for the user, it implements a minimax algorithm (optimized with alpha beta pruning) to play perfect tic-tac-toe as efficiently as possible.</h1>\n      </div>\n      \n    )\n\n    // if (this.state.hovered[0]) {\n    //   ff = <p>jfjfjfjfjf</p>\n    // }\n    // else {\n    //   ff = (\n    //     <img src={ FinancialLogo }/>\n    //   )\n    // }\n\n    // if (this.state.hovered[1]) {\n    //   ttr = (\n    //     <p>jfjfjfjfjf</p>\n    //   )\n    // }\n    // else {\n    //   ttr = (\n    //     <img src={ TtrLogo }/>\n    //   )\n    // }\n\n\n    return (\n      <Styles>\n        <div className='background'>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <Container>\n            <Row>\n              <Col>\n              </Col>\n              <Col>\n                <a href='https://anakeeb.github.io/financial-forecast-deploy'>\n                  <button className='link1' onMouseEnter={() => this.handleHoverIn(0)} onMouseLeave={() => this.handleHoverOut(0)}>\n                    { this.state.hovered[0] ? ffText : ff }\n                  </button>\n                </a>\n                \n                \n              </Col>\n              <Col>\n              </Col>\n              <Col>\n                <a href='https://anakeeb.github.io/tic-tac-robot-deploy'>\n                  <button className='link2' onMouseEnter={() => this.handleHoverIn(1)} onMouseLeave={() => this.handleHoverOut(1)}>\n                    { this.state.hovered[1] ? ttrText : ttr }\n                  </button>\n                </a>\n                \n              </Col>\n              <Col>\n              </Col>\n            </Row>\n          </Container>\n          \n        </div>\n      </Styles>\n      \n    )\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}